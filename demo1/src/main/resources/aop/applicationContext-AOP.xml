<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:aop="http://www.springframework.org/schema/aop"
       xsi:schemaLocation="http://www.springframework.org/schema/beans http://www.springframework.org/schema/beans/spring-beans.xsd
       http://www.springframework.org/schema/aop http://www.springframework.org/schema/aop/spring-aop.xsd">

    <bean id="writeLog" class="cn.xiao.springdemo.aop.common.WriteLog"/>
    <bean id="aopService" class="cn.xiao.springdemo.aop.service.AopService"/>

    <aop:config>
        <!-- 配置切入点，expression所匹配到的方法将全部纳为切入点 -->
        <aop:pointcut id="addLogException" expression="execution(* *.*ThrowException(..))"/>
        <!-- 配置切面 -->
        <aop:aspect id="log" ref="writeLog">
            <aop:pointcut id="addLog" expression="execution(* *.cutPoint(..))"/>
            <!-- 方法之前执行 -->
            <aop:before method="before" pointcut-ref="addLog"/>
            <!-- 方法正常完了后执行 -->
            <aop:after-returning method="afterReturn" pointcut-ref="addLog"/>
            <!-- 方法前后都将执行，在before之后，after-returning之前 -->
            <aop:around method="around" pointcut-ref="addLog"/>
            <!-- 在抛出异常后执行，在after之后 -->
            <aop:after-throwing method="exception" pointcut-ref="addLog"/>
            <!-- 类似于finally -->
            <aop:after method="after" pointcut-ref="addLog"/>

            <aop:before method="before" pointcut-ref="addLogException"/>
            <aop:after-returning method="afterReturn" pointcut-ref="addLogException"/>
            <aop:around method="around" pointcut-ref="addLogException"/>
            <aop:after-throwing method="exception" pointcut-ref="addLogException"/>
            <aop:after method="after" pointcut-ref="addLogException"/>
        </aop:aspect>
    </aop:config>

</beans>